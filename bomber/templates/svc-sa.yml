apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/created-by: retail-store-sample
  name: stormer

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: assets
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: carts
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: catalog
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkout
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orders
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq
  namespace: stormer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ui
    app.kubernetes.io/name: ui
  name: ui
  namespace: stormer
---
apiVersion: v1
data:
  PORT: "8080"
kind: ConfigMap
metadata:
  name: assets
  namespace: stormer
---
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID: key
  AWS_SECRET_ACCESS_KEY: secret
  CARTS_DYNAMODB_CREATETABLE: "true"
  CARTS_DYNAMODB_ENDPOINT: http://carts-dynamodb:8000
  CARTS_DYNAMODB_TABLENAME: Items
kind: ConfigMap
metadata:
  name: carts
  namespace: stormer
---
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  name: catalog
  namespace: stormer
---
apiVersion: v1
data:
  ENDPOINTS_ORDERS: http://orders.orders.svc:80
  REDIS_URL: redis://checkout-redis:6379
kind: ConfigMap
metadata:
  name: checkout
  namespace: stormer
---
apiVersion: v1
data:
  SPRING_PROFILES_ACTIVE: mysql,rabbitmq
  SPRING_RABBITMQ_HOST: rabbitmq.rabbitmq.svc
kind: ConfigMap
metadata:
  name: orders
  namespace: stormer
---
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  name: rabbitmq
  namespace: stormer
---
apiVersion: v1
data:
  ENDPOINTS_ASSETS: http://assets.assets.svc:80
  ENDPOINTS_CARTS: http://carts.carts.svc:80
  ENDPOINTS_CATALOG: http://catalog.catalog.svc:80
  ENDPOINTS_CHECKOUT: http://checkout.checkout.svc:80
  ENDPOINTS_ORDERS: http://orders.orders.svc:80
kind: ConfigMap
metadata:
  name: ui
  namespace: stormer
---
apiVersion: v1
data:
  endpoint: Y2F0YWxvZy1teXNxbDozMzA2
  name: Y2F0YWxvZw==
  password: ZGVmYXVsdF9wYXNzd29yZA==
  username: Y2F0YWxvZ191c2Vy
kind: Secret
metadata:
  name: catalog-db
  namespace: stormer
---
apiVersion: v1
data:
  name: b3JkZXJz
  password: ZGVmYXVsdF9wYXNzd29yZA==
  url: amRiYzptYXJpYWRiOi8vb3JkZXJzLW15c3FsOjMzMDYvb3JkZXJz
  username: b3JkZXJzX3VzZXI=
kind: Secret
metadata:
  name: orders-db
  namespace: stormer
---
apiVersion: v1
kind: Service
metadata:
  name: assets
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: assets
    app.kubernetes.io/name: assets
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: carts
    app.kubernetes.io/name: carts
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: carts-dynamodb
  namespace: stormer
spec:
  ports:
  - name: dynamodb
    port: 8000
    protocol: TCP
    targetPort: dynamodb
  selector:
    app.kubernetes.io/component: dynamodb
    app.kubernetes.io/instance: carts
    app.kubernetes.io/name: carts
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: catalog
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: catalog
    app.kubernetes.io/name: catalog
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-mysql
  namespace: stormer
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
  selector:
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: catalog
    app.kubernetes.io/name: catalog
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/name: checkout
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: checkout-redis
  namespace: stormer
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: redis
  selector:
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: checkout
    app.kubernetes.io/name: checkout
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: orders
    app.kubernetes.io/name: orders
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-mysql
  namespace: stormer
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
  selector:
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: orders
    app.kubernetes.io/name: orders
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: stormer
spec:
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: http
    port: 15672
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: rabbitmq
    app.kubernetes.io/instance: rabbitmq
    app.kubernetes.io/name: rabbitmq
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ui
    app.kubernetes.io/name: ui
  name: ui
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ui
    app.kubernetes.io/name: ui
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ui
    app.kubernetes.io/name: ui
  name: ui-lb
  namespace: stormer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ui
    app.kubernetes.io/name: ui
  type: LoadBalancer